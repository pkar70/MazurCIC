<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplicationName" xml:space="preserve">
    <value>Dynamizm charakteru</value>
  </data>
  <data name="errAnyError" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="resDlgNo" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="resDlgYes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="_lang" xml:space="preserve">
    <value>EN</value>
  </data>
  <data name="askWantSend" xml:space="preserve">
    <value>Do you want to send test's result?</value>
  </data>
  <data name="bWstecz.Content" xml:space="preserve">
    <value>&lt;Previous</value>
  </data>
  <data name="emailBodyStart" xml:space="preserve">
    <value>I kindly attach result of my todays test of character's dynamism</value>
  </data>
  <data name="emailSubject" xml:space="preserve">
    <value>My character's dynamism</value>
  </data>
  <data name="err10BezTwierdzen" xml:space="preserve">
    <value>Nie widzę pliku z treścią, a przecież był w Install!</value>
  </data>
  <data name="msgDalejDalej" xml:space="preserve">
    <value>Next&gt;</value>
  </data>
  <data name="msgDalejWynik" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="msgDuzyRozrzut" xml:space="preserve">
    <value>Too big spread of answers.</value>
  </data>
  <data name="msgEgzoDyn" xml:space="preserve">
    <value>Each person character, or strictly speaking, dynamism of character, changes with age: starting from egzodynamism, through statism, to endodynamism.</value>
  </data>
  <data name="msgEgzoStat" xml:space="preserve">
    <value>This app helps you in self-diagnosis of your character - when you choose answer for questions, at top of app window you would see diagram of dynamism of your character.</value>
  </data>
  <data name="msgEndoDyn" xml:space="preserve">
    <value>(comparing of characters of two persons is available on Windows version of app)</value>
  </data>
  <data name="msgEndoStat" xml:space="preserve">
    <value>This app is based on "Cybernetics and character" book, written by polish cybernetist prof. Marian Mazur (table 15.2 from book).</value>
  </data>
  <data name="msgMaloOdpowiedzi" xml:space="preserve">
    <value>As you answer only for some questions, result is not reliable.</value>
  </data>
  <data name="msgNoResult" xml:space="preserve">
    <value>No result!</value>
  </data>
  <data name="msgPoszczOdpowiedzi" xml:space="preserve">
    <value>Your answers:</value>
  </data>
  <data name="msgRozkladOdpowiedzi" xml:space="preserve">
    <value>Your answers</value>
  </data>
  <data name="msgStatyk" xml:space="preserve">
    <value>If one know dynamism of two person, one can (with great probability!) prognose their relation; e.g. if their marriage would be succesful, or would it disintegrate.</value>
  </data>
  <data name="msgTeza" xml:space="preserve">
    <value>Check dynamics of your character</value>
  </data>
  <data name="typEgzodynamik" xml:space="preserve">
    <value>egzodynamic</value>
  </data>
  <data name="typEgzostatyk" xml:space="preserve">
    <value>egzostatic</value>
  </data>
  <data name="typEndodynamik" xml:space="preserve">
    <value>endodynamic</value>
  </data>
  <data name="typEndostatyk" xml:space="preserve">
    <value>endostatic</value>
  </data>
  <data name="typStatyk" xml:space="preserve">
    <value>static</value>
  </data>
  <data name="uiEgzodynamik.Text" xml:space="preserve">
    <value>egzodynamic</value>
  </data>
  <data name="uiEndodynamik.Text" xml:space="preserve">
    <value>endodynamic</value>
  </data>
  <data name="uiEndostatyk.Text" xml:space="preserve">
    <value>endostatic</value>
  </data>
  <data name="uiEzgostatyk.Text" xml:space="preserve">
    <value>egzostatic</value>
  </data>
  <data name="uiKomparator.Label" xml:space="preserve">
    <value>Compare</value>
  </data>
  <data name="uiStatyk.Text" xml:space="preserve">
    <value>static</value>
  </data>
  <data name="wynik00" xml:space="preserve">
    <value>Result:</value>
  </data>
  <data name="wynik1l1" xml:space="preserve">
    <value>Probably you have less than 16 years.</value>
  </data>
  <data name="wynik1l2" xml:space="preserve">
    <value>In Eric Berne's terminology (transactional analysis) you are typical Child.</value>
  </data>
  <data name="wynik1l3" xml:space="preserve">
    <value>Your best partner in love: endodynamic.</value>
  </data>
  <data name="wynik2l1" xml:space="preserve">
    <value>Probably you have between 16 and 35 years.</value>
  </data>
  <data name="wynik2l2" xml:space="preserve">
    <value>In Eric Berne's terminology (transactional analysis) you are Child, with some elements of Adult.</value>
  </data>
  <data name="wynik2l3" xml:space="preserve">
    <value>Your best partner in love: endostatick.</value>
  </data>
  <data name="wynik3l1" xml:space="preserve">
    <value>Probably you have between 36 and 60 years.</value>
  </data>
  <data name="wynik3l2" xml:space="preserve">
    <value>In Eric Berne's terminology (transactional analysis) you are model Adult.</value>
  </data>
  <data name="wynik3l3" xml:space="preserve">
    <value>Your best partner in love: static.</value>
  </data>
  <data name="wynik4l1" xml:space="preserve">
    <value>Probably you have more than 60 years.</value>
  </data>
  <data name="wynik4l2" xml:space="preserve">
    <value>In Eric Berne's terminology (transactional analysis) you are Adult, with some elements of Parent.</value>
  </data>
  <data name="wynik4l3" xml:space="preserve">
    <value>Your best partner in love: egzostatic.</value>
  </data>
  <data name="wynik5l1" xml:space="preserve">
    <value>Most probably, you have 'accelerated character'...</value>
  </data>
  <data name="wynik5l2" xml:space="preserve">
    <value>In Eric Berne's terminology (transactional analysis) you are typical Parent.</value>
  </data>
  <data name="wynik5l3" xml:space="preserve">
    <value>Your best partner in love: egzodynamic.</value>
  </data>
  <data name="msgBetterLandscape" xml:space="preserve">
    <value>Using app in landscape orientation probably would be more convenient.</value>
  </data>
  <data name="uiFirstData.PlaceholderText" xml:space="preserve">
    <value>(choose result's file from ComboBox above)</value>
  </data>
  <data name="uiFirstPerson.Text" xml:space="preserve">
    <value>First person</value>
  </data>
  <data name="uiKoniec.Content" xml:space="preserve">
    <value>End</value>
  </data>
  <data name="uiLosyHead.Text" xml:space="preserve">
    <value>About yours relation...</value>
  </data>
  <data name="uiNaRok.Text" xml:space="preserve">
    <value>Current state</value>
  </data>
  <data name="uiPorownaj.Content" xml:space="preserve">
    <value>Compare</value>
  </data>
  <data name="uiSecondData.PlaceholderText" xml:space="preserve">
    <value>(paste result's from e.g. email)</value>
  </data>
  <data name="uiSecondPerson.Text" xml:space="preserve">
    <value>Second person</value>
  </data>
  <data name="bDalej.Content" xml:space="preserve">
    <value>Next&gt;</value>
  </data>
</root>